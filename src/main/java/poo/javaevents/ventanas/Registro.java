/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package poo.javaevents.ventanas;

import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerDateModel;
import javax.swing.border.LineBorder;
import poo.javaevents.clases.Cliente;
import poo.javaevents.clases.Datos;
import poo.javaevents.clases.Direccion;
import poo.javaevents.clases.TarjetaCredito;

/**
 *
 * @author golde
 */
public class Registro extends javax.swing.JFrame {

    /**
     * Creates new form Registro
     */
    public Registro() {
        initComponents();
        // Hacer invisible el texto de campos inválidos
        etiquetaCamposInvalidos.setVisible(false);
        
        // Obtener la fecha actual (solo mes y año)
        LocalDate localDate = LocalDate.now().withDayOfMonth(1); // Primer día del mes actual
        Date fechaActual = Date.from(localDate.atStartOfDay(
                ZoneId.systemDefault()).toInstant());

        // Crear el modelo con límite inferior en la fecha actual
        SpinnerDateModel modelo = new SpinnerDateModel(
            fechaActual, // valor inicial
            fechaActual, // fecha mínima 
            null,        // sin límite superior
            Calendar.MONTH // incrementos por mes
        );
        
        // Establecer un editor para el JSpinner con el formato de fecha adecuado
        JSpinner.DateEditor editor = new JSpinner.DateEditor(selectorFechaCaducidad, "MM/yyyy");
        selectorFechaCaducidad.setEditor(editor);
        editor.getTextField().setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        campoCorreo = new javax.swing.JTextField();
        etiquetaNombre = new javax.swing.JLabel();
        campoTelefono = new javax.swing.JTextField();
        etiquetaCrearCuenta = new javax.swing.JLabel();
        etiquetaInfoPersonal = new javax.swing.JLabel();
        etiquetaTelefono = new javax.swing.JLabel();
        campoClave = new javax.swing.JTextField();
        etiquetaClave = new javax.swing.JLabel();
        campoNombre = new javax.swing.JTextField();
        etiquetaCorreo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        etiquetaDireccion = new javax.swing.JLabel();
        etiquetaCalle = new javax.swing.JLabel();
        etiquetaCiudad = new javax.swing.JLabel();
        etiquetaNumCalle = new javax.swing.JLabel();
        campoCalle = new javax.swing.JTextField();
        campoCiudad = new javax.swing.JTextField();
        campoCodPostal = new javax.swing.JTextField();
        campoNumero = new javax.swing.JTextField();
        etiquetaCodPostal = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        selectorFechaCaducidad = new javax.swing.JSpinner();
        campoNumTarjeta = new javax.swing.JTextField();
        etiquetaNombreTitular = new javax.swing.JLabel();
        etiquetaNumTarjeta = new javax.swing.JLabel();
        etiquetaInfoTarjeta = new javax.swing.JLabel();
        campoNombreTitular = new javax.swing.JTextField();
        etiquetaFechaCaducidad = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        botonRegistro = new javax.swing.JButton();
        etiquetaCamposInvalidos = new javax.swing.JLabel();

        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("*");

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("*");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        campoCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCorreoActionPerformed(evt);
            }
        });

        etiquetaNombre.setText("Nombre");

        campoTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTelefonoActionPerformed(evt);
            }
        });

        etiquetaCrearCuenta.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        etiquetaCrearCuenta.setText("Crear una cuenta");

        etiquetaInfoPersonal.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        etiquetaInfoPersonal.setText("Información personal");

        etiquetaTelefono.setText("Teléfono");

        etiquetaClave.setText("Clave (8-64 caracteres)");

        campoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNombreActionPerformed(evt);
            }
        });

        etiquetaCorreo.setText("Correo electrónico");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etiquetaInfoPersonal)
                            .addComponent(etiquetaCrearCuenta)
                            .addComponent(etiquetaNombre))
                        .addGap(257, 257, 257))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(campoNombre)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoCorreo)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(etiquetaCorreo)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiquetaClave)
                    .addComponent(campoClave, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiquetaTelefono)
                    .addComponent(campoTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiquetaCrearCuenta)
                .addGap(18, 18, 18)
                .addComponent(etiquetaInfoPersonal)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaNombre)
                    .addComponent(etiquetaCorreo)
                    .addComponent(etiquetaClave)
                    .addComponent(etiquetaTelefono))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        etiquetaDireccion.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        etiquetaDireccion.setText("Dirección");

        etiquetaCalle.setText("Calle");

        etiquetaCiudad.setText("Ciudad");

        etiquetaNumCalle.setText("Número");

        campoCodPostal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCodPostalActionPerformed(evt);
            }
        });

        etiquetaCodPostal.setText("Código postal");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiquetaDireccion)
                    .addComponent(etiquetaCalle)
                    .addComponent(campoCalle))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiquetaNumCalle)
                    .addComponent(campoNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiquetaCiudad)
                    .addComponent(campoCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(etiquetaCodPostal)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(campoCodPostal))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiquetaDireccion)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaCalle)
                    .addComponent(etiquetaNumCalle)
                    .addComponent(etiquetaCiudad)
                    .addComponent(etiquetaCodPostal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoCodPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        selectorFechaCaducidad.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1747683262255L), null, null, java.util.Calendar.MONTH));

        etiquetaNombreTitular.setText("Nombre del titular");

        etiquetaNumTarjeta.setText("Número de tarjeta");

        etiquetaInfoTarjeta.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        etiquetaInfoTarjeta.setText("Información de tarjeta de crédito");

        etiquetaFechaCaducidad.setText("Fecha de caducidad");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etiquetaNombreTitular)
                            .addComponent(campoNombreTitular, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoNumTarjeta)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(etiquetaNumTarjeta)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectorFechaCaducidad, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaFechaCaducidad)))
                    .addComponent(etiquetaInfoTarjeta))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiquetaInfoTarjeta)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaNombreTitular)
                    .addComponent(etiquetaNumTarjeta)
                    .addComponent(etiquetaFechaCaducidad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNombreTitular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoNumTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectorFechaCaducidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("JavaEvents");

        botonRegistro.setText("Registrarse");
        botonRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistroActionPerformed(evt);
            }
        });

        etiquetaCamposInvalidos.setForeground(new java.awt.Color(255, 0, 0));
        etiquetaCamposInvalidos.setText("* Campos inválidos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(74, 74, 74))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(etiquetaCamposInvalidos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel3)
                .addGap(48, 48, 48)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonRegistro)
                    .addComponent(etiquetaCamposInvalidos))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void aplicarColorATodosLosCampos(Container container, Color color) {
        // Cambia el color a todos los JTextField de un contenedor
        for (Component comp : container.getComponents()) {
            if (comp instanceof JTextField) {
                ((JTextField) comp).setBorder(new LineBorder(color, 1));
            }
        }
    }
    
    private void aplicarColorATodasLasEtiquetas(Container container, Color color) {
        // Cambia el color a todos los JLabel de un contenedor
        for (Component comp : container.getComponents()) {
            if (comp instanceof JLabel) {
                ((JLabel) comp).setForeground(color);
            }
        }
    }
    
    private void campoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNombreActionPerformed

    private void campoTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTelefonoActionPerformed

    private void campoCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCorreoActionPerformed

    private void campoCodPostalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCodPostalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCodPostalActionPerformed

    private void botonRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistroActionPerformed
        // Variable para saber si se ha producido alguna excepción y avisar al
        // usuario antes de crear su cuenta
        boolean excepcion = false;
        etiquetaCamposInvalidos.setVisible(false);
        
        // Poner todo a su color original de nuevo por si se actualizan los campos
        Color gris = new Color(171, 173, 179);
        Color negro = new Color(40, 40, 40);
        
        aplicarColorATodosLosCampos(jPanel1, gris);
        aplicarColorATodosLosCampos(jPanel2, gris);
        aplicarColorATodosLosCampos(jPanel3, gris);
        
        aplicarColorATodasLasEtiquetas(jPanel1, negro);
        aplicarColorATodasLasEtiquetas(jPanel2, negro);
        aplicarColorATodasLasEtiquetas(jPanel3, negro);
        
        // Crear las variables que pueden causar excepcion para poder usarlas
        int telefono = 0;
        int numeroCalle = 0;
        int codigoPostal = 0;
        long numeroTarjeta = 0;

        // Obtener nombre
        String nombre = campoNombre.getText();
        
        // Comprobar que el nombre tiene solo letras y espacios 
        for (int i = 0; i < nombre.length(); i++) {
            char c = nombre.charAt(i);
            
            if (!((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c == ' '))) {
                System.out.println("ERROR NOMBRE");
                
                campoNombre.setBorder(new LineBorder(Color.RED, 1));
                
                excepcion = true;
            } 
        }
        
        // Verificar si el campo nombre está vacío
        if (nombre.length() == 0) {
            System.out.println("ERROR NOMBRE VACIO");
        
            campoNombre.setBorder(new LineBorder(Color.RED, 1));
            
            excepcion = true;
        }
        
        // Obtener correo electrónico
        String correo = campoCorreo.getText();
        
        // Comprobar que el formato del correo es correcto
        String[] listaCorreo1 = correo.split("@");
        
        // Mirar primero si contiene arroba
        if (listaCorreo1.length == 2) {
            String tipoCorreo = listaCorreo1[1];
            String[] listaCorreo2 = tipoCorreo.split("\\.");
            
            // Después mirar si contiene punto
            if (listaCorreo2.length != 2) {
                System.out.println("ERROR CORREO");
                
                campoCorreo.setBorder(new LineBorder(Color.RED, 1));
                
                excepcion = true;
            }
        } else {
            System.out.println("ERROR CORREO");
            
            campoCorreo.setBorder(new LineBorder(Color.RED, 1));
            
            excepcion = true;
        }
        
        // Obtener clave
        String clave = campoClave.getText();
        
        // Verificar si supera el mínimo o el máximo
        if (clave.length() < 8) {
            System.out.println("ERROR CLAVE CORTA");
            
            campoClave.setBorder(new LineBorder(Color.RED, 1));
            
            excepcion = true;
        }
        
        if (clave.length() > 64) {
            System.out.println("ERROR CLAVE LARGA");
            
            campoClave.setBorder(new LineBorder(Color.RED, 1));
            
            excepcion = true;
        }
        
        // Obtener numero de telefono
        try {
            telefono = Integer.parseInt(campoTelefono.getText());
        }
        catch (NumberFormatException nfe) {
            System.out.println("ERROR NUMERO TELEFONO");
            
            campoTelefono.setBorder(new LineBorder(Color.RED, 1));
            
            excepcion = true;
        }
        
        // Obtener calle
        String calle = campoCalle.getText();
        
        // Verificar si el campo calle es válido
        if (calle.length() == 0) {
            System.out.println("ERROR CALLE");
            
            campoCalle.setBorder(new LineBorder(Color.RED, 1));
            
            excepcion = true;
        }
        
        // Obtener número de calle
        try {
            numeroCalle = Integer.parseInt(campoNumero.getText());
        }
        catch (NumberFormatException nfe) {
            System.out.println("ERROR NUMERO CALLE");
            
            campoNumero.setBorder(new LineBorder(Color.RED, 1));
            
            excepcion = true;
        }
        
        // Obtener ciudad
        String ciudad = campoCiudad.getText();
        
        // Verificar si el campo ciudad es válido
        if (ciudad.length() == 0) {
            System.out.println("ERROR CIUDAD");
            
            campoCiudad.setBorder(new LineBorder(Color.RED, 1));
            
            excepcion = true;
        }
        
        // Obtener código postal
        try {
            codigoPostal = Integer.parseInt(campoNumero.getText());
        }
        catch (NumberFormatException nfe) {
            System.out.println("ERROR CODIGO POSTAL");
            
            campoCodPostal.setBorder(new LineBorder(Color.RED, 1));
            
            excepcion = true;
        }
        
        // Obtener nombre del titular de la tarjeta
        String nombreTitular = campoNombreTitular.getText();
        
        // Comprobar que el nombre tiene solo letras y espacios 
        for (int i = 0; i < nombreTitular.length(); i++) {
            char c = nombreTitular.charAt(i);
            
            if (!((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c == ' '))) {
                System.out.println("ERROR NOMBRE");
                
                campoNombreTitular.setBorder(new LineBorder(Color.RED, 1));
                
                excepcion = true;
            }
        }
        
        // Verificar si el campo nombre del titular está vacío
        if (nombreTitular.length() == 0) {
            System.out.println("ERROR NOMBRE TITULAR VACIO");
            
            campoNombreTitular.setBorder(new LineBorder(Color.RED, 1));
                
            excepcion = true;
        }
        
        // Obtener el número de tarjeta
        try {
            numeroTarjeta = Long.parseLong(campoNumTarjeta.getText());
        }
        catch (NumberFormatException nfe) {
            System.out.println("ERROR NUMERO TARJETA");
            
            campoNumTarjeta.setBorder(new LineBorder(Color.RED, 1));
            
            excepcion = true;
        }
        
        // Obtener fecha de caducidad
        Date fecha = (Date) selectorFechaCaducidad.getValue(); // Obtenemos java.util.Date
        LocalDate fechaCaducidad = fecha.toInstant()
                            .atZone(ZoneId.systemDefault())
                            .toLocalDate(); // Convertimos a LocalDate
        
        // Comprobar si se ha producido alguna excepcion
        if (!excepcion) {
            // Crear objeto con los datos de la dirección
            Direccion d = new Direccion(calle, numeroCalle, ciudad, codigoPostal);
            
            // Crear objeto con los datos de la tarjeta de crédito
            TarjetaCredito t = new TarjetaCredito(nombreTitular, numeroTarjeta, fechaCaducidad);
            
            // Crear objeto del cliente y guardarlo en Datos
            Cliente p = new Cliente(nombre, correo, clave, telefono, d, t, false);
            Datos.clientes.add(p);
            
            // Volver a abrir la ventana de login para que el usuario incie
            // sesión y cerrar la ventana actual
            Login l = new Login();
            l.setVisible(true);
            this.dispose();
            
        } else {
            System.out.println("Campos invalidos");
            etiquetaCamposInvalidos.setVisible(true);
        }
    }//GEN-LAST:event_botonRegistroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonRegistro;
    private javax.swing.JTextField campoCalle;
    private javax.swing.JTextField campoCiudad;
    private javax.swing.JTextField campoClave;
    private javax.swing.JTextField campoCodPostal;
    private javax.swing.JTextField campoCorreo;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JTextField campoNombreTitular;
    private javax.swing.JTextField campoNumTarjeta;
    private javax.swing.JTextField campoNumero;
    private javax.swing.JTextField campoTelefono;
    private javax.swing.JLabel etiquetaCalle;
    private javax.swing.JLabel etiquetaCamposInvalidos;
    private javax.swing.JLabel etiquetaCiudad;
    private javax.swing.JLabel etiquetaClave;
    private javax.swing.JLabel etiquetaCodPostal;
    private javax.swing.JLabel etiquetaCorreo;
    private javax.swing.JLabel etiquetaCrearCuenta;
    private javax.swing.JLabel etiquetaDireccion;
    private javax.swing.JLabel etiquetaFechaCaducidad;
    private javax.swing.JLabel etiquetaInfoPersonal;
    private javax.swing.JLabel etiquetaInfoTarjeta;
    private javax.swing.JLabel etiquetaNombre;
    private javax.swing.JLabel etiquetaNombreTitular;
    private javax.swing.JLabel etiquetaNumCalle;
    private javax.swing.JLabel etiquetaNumTarjeta;
    private javax.swing.JLabel etiquetaTelefono;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSpinner selectorFechaCaducidad;
    // End of variables declaration//GEN-END:variables
}
